local wk = require("which-key")

wk.setup()

local mappings = {
    { "<C-;>",       desc = "Harpoon File 4" },
    { "<C-d>",       desc = "Scroll Down (centered)" },
    { "<C-e>",       desc = "Toggle Harpoon Menu" },
    { "<C-f>",       desc = "Open tmux-sessionizer" },
    { "<C-h>",       "<cmd>lua vim.lsp.buf.signature_help()<cr>",          desc = "Signature Help" },
    { "<C-j>",       "<cmd>cprev<CR>zz",                                   desc = "Previous Quickfix Item" },
    { "<C-k>",       "<cmd>cnext<CR>zz",                                   desc = "Next Quickfix Item" },
    { "<C-l>",       desc = "Harpoon File 3" },
    { "<C-p>",       desc = "Git Files" },
    { "<C-u>",       desc = "Scroll Up (centered)" },
    { "<leader>a",   desc = "Add to Harpoon" },
    { "<leader>b",   group = "Block" },
    { "<leader>bc",  desc = "Toggle Block Comment" },
    { "<leader>c",   group = "Comment" },
    { "<leader>cc",  desc = "Toggle Line Comment" },
    { "<leader>d",   group = "Debug" },
    { "<leader>db",  "<cmd>DapToggleBreakpoint<cr>",                       desc = "Toggle Breakpoint" },
    { "<leader>dc",  "<cmd>DapContinue<cr>",                               desc = "Continue Debugging" },
    { "<leader>dr",  "<cmd>lua require('dapui').open({reset = true})<cr>", desc = "Open DAP UI (Reset)" },
    { "<leader>dt",  "<cmd>lua require('dapui').toggle()<cr>",             desc = "Toggle DAP UI" },
    { "<leader>f",   "<cmd>lua vim.lsp.buf.format()<cr>",                  desc = "Format Buffer" },
    { "<leader>gs",  "<cmd>Git<cr>",                                       desc = "Git Status" },
    { "<leader>j",   "<cmd>lprev<CR>zz",                                   desc = "Previous Location List Item" },
    { "<leader>k",   "<cmd>lnext<CR>zz",                                   desc = "Next Location List Item" },
    { "<leader>p",   group = "Find" },
    { "<leader>pf",  "<cmd>Telescope find_files<cr>",                      desc = "Find File" },
    { "<leader>ps",  "<cmd>Telescope live_grep<cr>",                       desc = "Grep Search" },
    { "<leader>pv",  "<cmd>Ex<cr>",                                        desc = "Open File Explorer" },
    { "<leader>s",   desc = "Search and Replace Word" },
    { "<leader>u",   "<cmd>UndotreeToggle<cr>",                            desc = "Toggle Undotree" },
    { "<leader>v",   group = "LSP" },
    { "<leader>vc",  group = "Code" },
    { "<leader>vca", "<cmd>lua vim.lsp.buf.code_action()<cr>",             desc = "Code Action" },
    { "<leader>vd",  "<cmd>lua vim.diagnostic.open_float()<cr>",           desc = "Open Float Diagnostic" },
    { "<leader>vr",  group = "References" },
    { "<leader>vrn", "<cmd>lua vim.lsp.buf.rename()<cr>",                  desc = "Rename Symbol" },
    { "<leader>vrr", "<cmd>lua vim.lsp.buf.references()<cr>",              desc = "Show References" },
    { "<leader>vw",  "<cmd>lua vim.lsp.buf.workspace_symbol()<cr>",        desc = "Workspace Symbol" },
    { "<leader>x",   "<cmd>!chmod +x %<cr>",                               desc = "Make Executable" },
    { "<leader>y",   desc = "Yank to Clipboard" },
    { "K",           "<cmd>lua vim.lsp.buf.hover()<cr>",                   desc = "Show Hover Information" },
    { "[d",          "<cmd>lua vim.diagnostic.goto_prev()<cr>",            desc = "Previous Diagnostic" },
    { "]d",          "<cmd>lua vim.diagnostic.goto_next()<cr>",            desc = "Next Diagnostic" },
    { "gd",          "<cmd>lua vim.lsp.buf.definition()<cr>",              desc = "Go to Definition" },
}

wk.add(mappings)
